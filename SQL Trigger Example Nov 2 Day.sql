SELECT	*
FROM	ORDER_LINE

SELECT	ITEM_NUM, COUNT(*)
FROM	ORDER_LINE
GROUP BY ITEM_NUM

SELECT	ITEM_NUM, ON_HAND
FROM	ITEM
WHERE	ITEM_NUM IN ('FD11', 'KL78', 'TR40')

UPDATE	ORDER_LINE
SET		NUM_ORDERED = NUM_ORDERED + 10
WHERE	ORDER_NUM = 51610 OR
		ITEM_NUM = 'FD11'

UPDATE	ORDER_LINE
SET		NUM_ORDERED = NUM_ORDERED - 10
WHERE	ORDER_NUM = 51610 OR
		ITEM_NUM = 'FD11'


ALTER TRIGGER UPDATE_ITEM_ON_HAND
   ON  ORDER_LINE 
   AFTER INSERT,DELETE,UPDATE
AS 
BEGIN

	DECLARE	@ITEM_NUM CHAR(4)
	DECLARE @TOTAL INT
	
	IF(EXISTS (SELECT * FROM INSERTED))
	BEGIN
		--LOGIC TO HANDLE RECORDS IN INSERTED
		DECLARE INSERTED_CURSOR CURSOR FOR
		SELECT	ITEM_NUM, SUM(NUM_ORDERED) AS TOTAL
		FROM	INSERTED
		GROUP BY ITEM_NUM

		OPEN	INSERTED_CURSOR
		FETCH	NEXT FROM INSERTED_CURSOR
				INTO @ITEM_NUM, @TOTAL
		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE	ITEM
			SET		ON_HAND = ON_HAND - @TOTAL
			WHERE	ITEM_NUM = @ITEM_NUM
			FETCH	NEXT FROM INSERTED_CURSOR
					INTO @ITEM_NUM, @TOTAL
		END
		CLOSE INSERTED_CURSOR
		DEALLOCATE INSERTED_CURSOR
	END

	IF(EXISTS (SELECT * FROM DELETED))
	BEGIN
		--LOGIC TO HANDLE RECORDS IN INSERTED
		DECLARE DELETED_CURSOR CURSOR FOR
		SELECT	ITEM_NUM, SUM(NUM_ORDERED) AS TOTAL
		FROM	DELETED
		GROUP BY ITEM_NUM

		OPEN	DELETED_CURSOR
		FETCH	NEXT FROM DELETED_CURSOR
				INTO @ITEM_NUM, @TOTAL
		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE	ITEM
			SET		ON_HAND = ON_HAND + @TOTAL
			WHERE	ITEM_NUM = @ITEM_NUM
			FETCH	NEXT FROM DELETED_CURSOR
					INTO @ITEM_NUM, @TOTAL
		END
		CLOSE DELETED_CURSOR
		DEALLOCATE DELETED_CURSOR
	END


END
GO
